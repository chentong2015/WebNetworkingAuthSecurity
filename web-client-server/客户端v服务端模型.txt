TODO. Client Server模型设计
1. 发送的请求造成timeout如何处理 ?  .timeout(Duration.ofMinutes(3))

2. 连接失败是否有retry自动重新连接 ? feign.Retryer自定义

3. 服务端返回带有特定错误状态的回复 ? ResponseEntity(HttpStatusCode status)

4. 耗时请求如何避免出现阻塞 ? 请求是耗时操作，服务端无法立即返回
   Async + Callback 通过回调方式，请求结束会调用回调方法
   httpAsyncClient.execute(post, FutureCallback());
   - void completed()
   - void failed()
   - void cancel()

TODO. 如何处理Large-Payload大数据的交换传输 ?
Make large payload exchange between HTTP services more efficient
Allow a client to receive messages about asynchronous updates from a server

1. Pageable & Chunk
   将数据分页和分块传输，直到数据被传输完毕
   如果传输途中出现问题(网络中断)，则在重现连接后发送剩余数据

2. Reactive 相应式编程，订阅Event事件
   服务端持续发送异步地数据推送
   httpClient.sendAsync(request, responseInfo -> new EventSubscriber())